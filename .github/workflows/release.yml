name: Automated Release

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Automated Release
    runs-on: ubuntu-latest
    outputs:
      new-release-published: ${{ steps.semantic-release.outputs.new-release-published }}
      new-release-version: ${{ steps.semantic-release.outputs.new-release-version }}
      new-release-notes: ${{ steps.semantic-release.outputs.new-release-notes }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.19.0'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10.14.0'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build package
        run: pnpm build

      - name: Run tests
        run: pnpm test:unit

      - name: Semantic Release
        id: semantic-release
        run: pnpm semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Upload build artifacts
        if: steps.semantic-release.outputs.new-release-published == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ steps.semantic-release.outputs.new-release-version }}
          path: dist/

      - name: Notify release
        if: steps.semantic-release.outputs.new-release-published == 'true'
        run: |
          echo "🎉 New release published: ${{ steps.semantic-release.outputs.new-release-version }}"
          echo "📝 Release notes: ${{ steps.semantic-release.outputs.new-release-notes }}"

  notify:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.new-release-published == 'true'

    steps:
      - name: Notify Discord/Slack (Optional)
        run: |
          echo "🚀 New version ${{ needs.release.outputs.new-release-version }} released!"
          echo "📋 Notes: ${{ needs.release.outputs.new-release-notes }}"
          # Add Discord/Slack webhook here if desired
