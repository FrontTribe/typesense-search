name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        
      - name: Run linting
        run: npm run lint
        
      - name: Check for breaking changes
        id: breaking-changes
        run: |
          # Check if there are breaking changes in the PR
          # This is a simple check - you can enhance it based on your needs
          if git diff origin/main...HEAD --name-only | grep -E "(src/|package\.json|CHANGELOG\.md)" | grep -v "^docs/"; then
            echo "breaking_changes=true" >> $GITHUB_OUTPUT
            echo "Potential breaking changes detected"
          else
            echo "breaking_changes=false" >> $GITHUB_OUTPUT
            echo "No obvious breaking changes detected"
          fi
          
      - name: Comment on PR for breaking changes
        if: steps.breaking-changes.outputs.breaking_changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `⚠️ **Breaking Changes Detected**
            
            This PR appears to contain breaking changes. Please ensure:
            
            - [ ] Breaking changes are documented in the PR description
            - [ ] Version bump will be appropriate (major version)
            - [ ] Migration guide is provided if needed
            - [ ] All tests pass
            
            The automated release system will create a major version bump for this PR.`;
            
            try {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
              console.log('Comment posted successfully');
            } catch (error) {
              console.error('Failed to post comment:', error);
              // Don't fail the workflow if commenting fails
            }
